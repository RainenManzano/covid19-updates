{"version":3,"sources":["assets/images/background.jpg","assets/images/world.jpg","assets/images/meeting.jpg","assets/images/covid.jpg","assets/images/react.png","assets/images/html5.jpg","assets/images/css3.jpg","assets/images/coding.jpg","components/Link/Link.js","components/NavBar/NavBar.js","UI/Table.js","axios/IpIdentifier.js","axios/IpLocator.js","context/CasesContext.js","components/Banner/Tally/Tally.js","components/Banner/World/World.js","components/Banner/About/About.js","components/Banner/Covid/Covid.js","components/Banner/Technologies/Technologies.js","axios/covid19.js","axios/Countries.js","components/Index/Index.js","app.js","serviceWorker.js","index.js"],"names":["module","exports","Link","props","exact","to","url","activeClassName","activeClass","name","NavBar","className","siteName","map","link","i","key","Table","id","tableClass","headings","heading","rows","row","td","tdClass","data","instance","axios","create","baseURL","CasesContext","React","createContext","summary","Tally","casesContext","useContext","useState","ipAddress","setIpAddress","country","setCountry","apiDate","setApiDate","newConfirmed","setnewConfirmed","totalConfirmed","setTotalConfirmed","newDeaths","setNewDeaths","totalDeaths","setTotalDeaths","newRecovered","setNewRecovered","totalRecovered","setTotalRecovered","activeCases","setActiveCases","useEffect","isMounted","IpIdentifier","method","then","response","ipData","split","filter","indexOf","catch","err","console","log","IpLocator","params","q","ipInfo","info","trim","Countries","cases","obj","Country","getCountryCases","tempDate","Date","apiDateString","getMonth","getDate","getFullYear","NewConfirmed","TotalConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","formatValue","value","toLocaleString","undefined","maximumFractionDigits","minimumFractionDigits","tableRows","duration","bannerStyle","background","bg","backgroundSize","backgroundRepeat","backgroundPosition","backgroundAttachment","style","World","setCases","deaths","setDeaths","recoveries","setRecoveries","setRows","Global","push","src","flag","width","alt","About","Covid","img","Technologies","imgStyle","reactPicture","reactImg","htmlPicture","htmlImg","cssPicture","cssImg","Axios","Index","setSummary","tempSummary","setTempSummary","CovidApi","CountriesAPI","fields","tempArray","countryData","find","newCountry","object","Provider","atEnter","opacity","atLeave","atActive","path","render","App","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.52ee1db4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.12af6e71.jpg\";","module.exports = __webpack_public_path__ + \"static/media/world.27ff17f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meeting.72390401.jpg\";","module.exports = __webpack_public_path__ + \"static/media/covid.b5a75b58.jpg\";","module.exports = __webpack_public_path__ + \"static/media/react.61e3d5ce.png\";","module.exports = __webpack_public_path__ + \"static/media/html5.c26fcd13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/css3.23625348.jpg\";","module.exports = __webpack_public_path__ + \"static/media/coding.55aa4d9e.jpg\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./Link.css\";\r\n\r\nconst Link = (props) => {\r\n  return (\r\n    <NavLink exact to={props.url} activeClassName={props.activeClass}>\r\n      {props.name}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default Link;\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport Link from \"../Link/Link\";\r\n\r\nimport \"./NavBar.css\";\r\n\r\nconst NavBar = (props) => {\r\n  const links = [\r\n    { name: \"Home\", url: \"/\" },\r\n    { name: \"About us\", url: \"/about-us\" },\r\n    // { name: \"Contact\", url: \"/contact\" },\r\n  ];\r\n  return (\r\n    <header>\r\n      <div className=\"wrapper\">\r\n        <div className=\"logo\">\r\n          <span className={props.className}>{props.siteName}</span>\r\n        </div>\r\n        <nav>\r\n          {links.map((link, i) => {\r\n            return (\r\n              <Link\r\n                url={link.url}\r\n                name={link.name}\r\n                activeClass=\"active-link\"\r\n                key={i}\r\n              />\r\n            );\r\n          })}\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Table = (props) => {\r\n  return (\r\n    <table id={props.id} className={props.tableClass}>\r\n      <thead>\r\n        <tr>\r\n          {props.headings.map((heading, i) => {\r\n            return <th key={i}>{heading}</th>;\r\n          })}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.rows.map((row, i) => {\r\n          return (\r\n            <tr key={i}>\r\n              {row.map((td, i) => {\r\n                return (\r\n                  <td className={td.tdClass} key={i}>\r\n                    {td.data}\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://www.cloudflare.com/cdn-cgi/trace\",\r\n});\r\n\r\nexport default instance;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.hackertarget.com/geoip/\",\r\n});\r\n\r\nexport default instance;\r\n","import React from \"react\";\r\n\r\nconst CasesContext = React.createContext({\r\n  summary: [],\r\n});\r\n\r\nexport default CasesContext;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport AnimatedNumber from \"animated-number-react\";\r\n\r\nimport \"./Tally.css\";\r\nimport bg from \"../../../assets/images/background.jpg\";\r\n\r\n// Components\r\nimport Table from \"../../../UI/Table\";\r\n\r\n// API\r\nimport IpIdentifier from \"../../../axios/IpIdentifier\";\r\nimport IpLocator from \"../../../axios/IpLocator\";\r\n\r\n// Contexts\r\nimport CasesContext from \"../../../context/CasesContext\";\r\n\r\nconst getCountryCases = (country, data) => {\r\n  const countryCases = data.filter((obj) => {\r\n    return obj.Country === country ? obj : false;\r\n  });\r\n  return countryCases;\r\n};\r\n\r\nconst Tally = (props) => {\r\n  const casesContext = useContext(CasesContext);\r\n  const [ipAddress, setIpAddress] = useState(null);\r\n  const [country, setCountry] = useState(null);\r\n  const [apiDate, setApiDate] = useState(null);\r\n\r\n  const [newConfirmed, setnewConfirmed] = useState(0);\r\n  const [totalConfirmed, setTotalConfirmed] = useState(0);\r\n  const [newDeaths, setNewDeaths] = useState(0);\r\n  const [totalDeaths, setTotalDeaths] = useState(0);\r\n  const [newRecovered, setNewRecovered] = useState(0);\r\n  const [totalRecovered, setTotalRecovered] = useState(0);\r\n  const [activeCases, setActiveCases] = useState(0);\r\n\r\n  // Getting IP Address\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    IpIdentifier({ method: \"get\" })\r\n      .then((response) => {\r\n        const ipRawData = response.data;\r\n        let ipData = ipRawData.split(\"\\n\");\r\n        ipData = ipData.filter((data) => {\r\n          return data.indexOf(\"ip\") !== -1 ? data : false;\r\n        });\r\n        ipData = ipData[0].split(\"=\")[1];\r\n        if (isMounted) {\r\n          setIpAddress(ipData);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  // Getting IP's Location\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (ipAddress !== null) {\r\n      IpLocator({\r\n        method: \"get\",\r\n        params: {\r\n          q: ipAddress,\r\n        },\r\n      }).then((ipInfo) => {\r\n        // Getting the country\r\n        if (isMounted) {\r\n          console.log(ipInfo);\r\n          ipInfo = ipInfo.data.split(\"\\n\");\r\n          ipInfo = ipInfo.filter((info) => {\r\n            return info.indexOf(\"Country\") !== -1 ? info : false;\r\n          });\r\n          setCountry(ipInfo[0].split(\":\")[1].trim());\r\n          // setCountry(\"Philippines\");\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [ipAddress]);\r\n\r\n  // Setting confirmed, deaths, and recovered data\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    // console.log(ipAddress, country);\r\n    if (ipAddress !== null && country !== null) {\r\n      if (casesContext.summary.Countries) {\r\n        const cases = getCountryCases(country, casesContext.summary.Countries);\r\n        const months = [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"August\",\r\n          \"September\",\r\n          \"October\",\r\n          \"November\",\r\n          \"December\",\r\n        ];\r\n        // console.log(\"Cases\", cases);\r\n        const tempDate = new Date(cases[0].Date);\r\n        let apiDateString = `${\r\n          months[tempDate.getMonth()]\r\n        } ${tempDate.getDate()}, ${tempDate.getFullYear()}`;\r\n        if (isMounted) {\r\n          setApiDate(apiDateString);\r\n          setnewConfirmed(cases[0].NewConfirmed);\r\n          setTotalConfirmed(cases[0].TotalConfirmed);\r\n          setNewDeaths(cases[0].NewDeaths);\r\n          setTotalDeaths(cases[0].TotalDeaths);\r\n          setNewRecovered(cases[0].NewRecovered);\r\n          setTotalRecovered(cases[0].TotalRecovered);\r\n        }\r\n      }\r\n    }\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [ipAddress, country, casesContext.summary]);\r\n\r\n  // Setting Active Cases\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (isMounted) {\r\n      setActiveCases(totalConfirmed - (totalDeaths + totalRecovered));\r\n    }\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [totalConfirmed, totalDeaths, totalRecovered]);\r\n\r\n  const formatValue = (value) =>\r\n    value.toLocaleString(undefined, {\r\n      maximumFractionDigits: 0,\r\n      minimumFractionDigits: 0,\r\n    });\r\n  const duration = 3000;\r\n  let tableHeadings = [\"CASES\", \"NEW\", \"TOTAL\"];\r\n  let tableRows = [\r\n    [\r\n      { data: \"CONFIRMED\", tdClass: \"cases\" },\r\n      {\r\n        data: (\r\n          <AnimatedNumber\r\n            value={newConfirmed}\r\n            duration={duration}\r\n            formatValue={formatValue}\r\n          />\r\n        ),\r\n        tdClass: \"cases\",\r\n      },\r\n      {\r\n        data: (\r\n          <AnimatedNumber\r\n            value={totalConfirmed}\r\n            duration={duration}\r\n            formatValue={formatValue}\r\n          />\r\n        ),\r\n        tdClass: \"text-yellow\",\r\n      },\r\n    ],\r\n    [\r\n      { data: \"DEATHS\", tdClass: \"cases\" },\r\n      {\r\n        data: (\r\n          <AnimatedNumber\r\n            value={newDeaths}\r\n            duration={duration}\r\n            formatValue={formatValue}\r\n          />\r\n        ),\r\n        tdClass: \"cases\",\r\n      },\r\n      {\r\n        data: (\r\n          <AnimatedNumber\r\n            value={totalDeaths}\r\n            duration={duration}\r\n            formatValue={formatValue}\r\n          />\r\n        ),\r\n        tdClass: \"text-red\",\r\n      },\r\n    ],\r\n    [\r\n      { data: \"RECOVERIES\", tdClass: \"cases\" },\r\n      {\r\n        data: (\r\n          <AnimatedNumber\r\n            value={newRecovered}\r\n            duration={duration}\r\n            formatValue={formatValue}\r\n          />\r\n        ),\r\n        tdClass: \"cases\",\r\n      },\r\n      {\r\n        data: (\r\n          <AnimatedNumber\r\n            value={totalRecovered}\r\n            duration={duration}\r\n            formatValue={formatValue}\r\n          />\r\n        ),\r\n        tdClass: \"text-green\",\r\n      },\r\n    ],\r\n  ];\r\n\r\n  const bannerStyle = {\r\n    background: `url(${bg})`,\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundAttachment: \"fixed\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"banner\" style={bannerStyle}>\r\n      <h2>COVID-19</h2>\r\n      <h3 id=\"tallyTitle\">Tally of {country} Cases</h3>\r\n      <h6>AS OF {apiDate}</h6>\r\n      <Table\r\n        id=\"tally\"\r\n        tableClass=\"text-white\"\r\n        headings={tableHeadings}\r\n        rows={tableRows}\r\n      />\r\n      <p id=\"active-cases\">\r\n        ACTIVE CASES &nbsp;&nbsp;\r\n        <AnimatedNumber\r\n          className=\"active-number\"\r\n          value={activeCases}\r\n          duration={duration}\r\n          formatValue={formatValue}\r\n        />\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tally;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport AnimatedNumber from \"animated-number-react\";\r\n// Components\r\nimport Table from \"../../../UI/Table\";\r\n// Contexts\r\nimport CasesContext from \"../../../context/CasesContext\";\r\n// Assets\r\nimport \"./World.css\";\r\nimport bg from \"./../../../assets/images/world.jpg\";\r\n\r\nconst World = (props) => {\r\n  const casesContext = useContext(CasesContext);\r\n  const [cases, setCases] = useState(0);\r\n  const [deaths, setDeaths] = useState(0);\r\n  const [recoveries, setRecoveries] = useState(0);\r\n  const [rows, setRows] = useState([]);\r\n  const bannerStyle = {\r\n    background: `url(${bg})`,\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundAttachment: \"fixed\",\r\n  };\r\n  const duration = 3000;\r\n  const formatValue = (value) =>\r\n    value.toLocaleString(undefined, {\r\n      maximumFractionDigits: 0,\r\n      minimumFractionDigits: 0,\r\n    });\r\n  let headings = [\"Country\", \"\", \"Cases\", \"Recoveries\", \"Deaths\"];\r\n\r\n  // Global Cases (Total, Deaths, Recoveries)\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (\r\n      isMounted &&\r\n      casesContext.summary.Global &&\r\n      casesContext.summary.Countries\r\n    ) {\r\n      // console.log(\"World Context\", casesContext.summary.Global);\r\n      const tableRows = [];\r\n      for (let country of casesContext.summary.Countries) {\r\n        tableRows.push([\r\n          {\r\n            data: <span>{country.Country}</span>,\r\n            tdClass: \"\",\r\n          },\r\n          {\r\n            data: (\r\n              <img src={country.flag} style={{ width: \"40%\" }} alt=\"flag\" />\r\n            ),\r\n            tdClass: \"\",\r\n          },\r\n          {\r\n            data: country.TotalConfirmed.toLocaleString(undefined, {\r\n              minimumFractionDigits: 0,\r\n              maximumFractionDigits: 0,\r\n            }),\r\n            tdClass: \"\",\r\n          },\r\n          {\r\n            data: country.TotalRecovered.toLocaleString(undefined, {\r\n              minimumFractionDigits: 0,\r\n              maximumFractionDigits: 0,\r\n            }),\r\n            tdClass: \"\",\r\n          },\r\n          {\r\n            data: country.TotalDeaths.toLocaleString(undefined, {\r\n              minimumFractionDigits: 0,\r\n              maximumFractionDigits: 0,\r\n            }),\r\n            tdClass: \"\",\r\n          },\r\n        ]);\r\n      }\r\n      setRows(tableRows);\r\n      setCases(casesContext.summary.Global.TotalConfirmed);\r\n      setDeaths(casesContext.summary.Global.TotalDeaths);\r\n      setRecoveries(casesContext.summary.Global.TotalRecovered);\r\n    }\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [casesContext.summary]);\r\n\r\n  return (\r\n    <div id=\"global-banner\" style={bannerStyle}>\r\n      <div className=\"half-width\">\r\n        <h2 className=\"text-white lh-50 pl weight-500 bt bl br\">\r\n          Global Cases\r\n        </h2>\r\n        <h1 className=\"text-white weight-900 text-center bb br bl pb text-yellow number\">\r\n          <AnimatedNumber\r\n            value={cases}\r\n            duration={duration}\r\n            formatValue={formatValue}\r\n          />\r\n        </h1>\r\n        <div className=\"half-width\">\r\n          <h2 className=\"text-white lh-50 weight-500 br bl text-center\">\r\n            Recoveries\r\n          </h2>\r\n          <h2 className=\"text-white weight-900 br bl text-center pb bb text-green number\">\r\n            <AnimatedNumber\r\n              value={recoveries}\r\n              duration={duration}\r\n              formatValue={formatValue}\r\n            />\r\n          </h2>\r\n        </div>\r\n        <div className=\"half-width\">\r\n          <h2 className=\"text-white lh-50 weight-500 br text-center\">Deaths</h2>\r\n          <h2 className=\"text-white weight-900 br text-center pb bb text-red number\">\r\n            <AnimatedNumber\r\n              value={deaths}\r\n              duration={duration}\r\n              formatValue={formatValue}\r\n            />\r\n          </h2>\r\n        </div>\r\n        <h2 className=\"text-white weight-500 text-center lh-50\">\r\n          List of Countries\r\n        </h2>\r\n        <Table id=\"countriesTable\" headings={headings} rows={rows} />\r\n      </div>\r\n      <div className=\"half-width\">\r\n        <h2 className=\"text-white pl weight-500 lh-50\">WORLD MAP</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default World;\r\n","import React from \"react\";\r\n\r\nimport \"./About.css\";\r\nimport bg from \"../../../assets/images/meeting.jpg\";\r\n\r\nconst About = () => {\r\n  const bannerStyle = {\r\n    background: `url(${bg})`,\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundAttachment: \"fixed\",\r\n  };\r\n  return (\r\n    <div style={bannerStyle} id=\"aboutBanner\">\r\n      <h1>About us</h1>\r\n      <div className=\"wrapper-content\">\r\n        <p>\r\n          \" Our mission is to deliver accurate updates in regards to COVID-19.\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. In\r\n          fermentum et sollicitudin ac orci phasellus egestas tellus. Velit\r\n          euismod in pellentesque massa placerat duis ultricies. Orci porta non\r\n          pulvinar neque laoreet suspendisse. Ipsum dolor sit amet consectetur\r\n          adipiscing elit. Faucibus ornare suspendisse sed nisi lacus sed\r\n          viverra tellus. \"\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nimport \"./Covid.css\";\r\nimport img from \"../../../assets/images/covid.jpg\";\r\n\r\nconst Covid = (props) => {\r\n  return (\r\n    <div className=\"wrapper\" id=\"banner-2\">\r\n      <div className=\"wrapper-content\">\r\n        <div className=\"picture-container\">\r\n          <img src={img} alt=\"\" />\r\n        </div>\r\n        <div className=\"info\">\r\n          <h3>What on earth is COVID 19?</h3>\r\n          <p>\r\n            Coronavirus disease (COVID-19) is an infectious disease caused by a\r\n            newly discovered coronavirus. Most people who fall sick with\r\n            COVID-19 will experience mild to moderate symptoms and recover\r\n            without special treatment.\r\n          </p>\r\n          <p>\r\n            The virus that causes COVID-19 is mainly transmitted through\r\n            droplets generated when an infected person coughs, sneezes, or\r\n            exhales. These droplets are too heavy to hang in the air, and\r\n            quickly fall on floors or surfaces.\r\n          </p>\r\n          <p>\r\n            You can be infected by breathing in the virus if you are within\r\n            close proximity of someone who has COVID-19, or by touching a\r\n            contaminated surface and then your eyes, nose or mouth.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Covid;\r\n","import React from \"react\";\r\n\r\nimport \"./Technologies.css\";\r\nimport reactImg from \"../../../assets/images/react.png\";\r\nimport htmlImg from \"../../../assets/images/html5.jpg\";\r\nimport cssImg from \"../../../assets/images/css3.jpg\";\r\nimport bg from \"../../../assets/images/coding.jpg\";\r\n\r\nconst Technologies = () => {\r\n  const bannerStyle = {\r\n    background: `url(${bg})`,\r\n    backgroundPosition: \"center center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundAttachment: \"fixed\",\r\n  };\r\n  const imgStyle = {\r\n    backgroundPosition: \"center center\",\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n  };\r\n  const reactPicture = {\r\n    background: `url(${reactImg})`,\r\n    ...imgStyle,\r\n  };\r\n  const htmlPicture = {\r\n    background: `url(${htmlImg})`,\r\n    ...imgStyle,\r\n  };\r\n  const cssPicture = {\r\n    background: `url(${cssImg})`,\r\n    ...imgStyle,\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\" id=\"banner-3\" style={bannerStyle}>\r\n      <h1>Technologies Used</h1>\r\n      <div className=\"wrapper-content padding-top\">\r\n        <div style={reactPicture} className=\"technology\"></div>\r\n        <div style={htmlPicture} className=\"technology\"></div>\r\n        <div style={cssPicture} className=\"technology\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Technologies;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.covid19api.com/\",\r\n});\r\n\r\nexport default instance;\r\n","import Axios from \"axios\";\r\n\r\nconst instance = Axios.create({\r\n  baseURL: \"https://restcountries.eu/rest/v2/\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { AnimatedSwitch } from \"react-router-transition\";\r\n\r\n// Components\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport Tally from \"../Banner/Tally/Tally\";\r\nimport World from \"../Banner/World/World\";\r\nimport About from \"../Banner/About/About\";\r\nimport Covid from \"../Banner/Covid/Covid\";\r\nimport Technologies from \"../Banner/Technologies/Technologies\";\r\n\r\n// Axios\r\nimport CovidApi from \"../../axios/covid19\";\r\nimport CountriesAPI from \"../../axios/Countries\";\r\n\r\n// Contexts\r\nimport CasesContext from \"../../context/CasesContext\";\r\n\r\n// Assets\r\nimport \"./Index.css\";\r\n\r\nconst Index = () => {\r\n  const [summary, setSummary] = useState([]);\r\n  const [tempSummary, setTempSummary] = useState([]);\r\n  const value = { summary };\r\n\r\n  // COVID API\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    CovidApi({\r\n      method: \"get\",\r\n      url: \"summary\",\r\n    })\r\n      .then((response) => {\r\n        // console.log(\"Covid API\", response.data);\r\n        if (isMounted) {\r\n          setTempSummary(response.data);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  // COUNTRIES FLAG\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    CountriesAPI({\r\n      method: \"get\",\r\n      url: \"/\",\r\n      params: {\r\n        fields: \"name;flag\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        // console.log(\"Countries API\", response.data);\r\n        const tempArray = [];\r\n        if (tempSummary.Countries) {\r\n          for (let countryData of tempSummary.Countries) {\r\n            const flag = response.data.find(\r\n              (country) => country.name === countryData.Country\r\n            );\r\n            const newCountry = { ...countryData, ...flag };\r\n            tempArray.push(newCountry);\r\n          }\r\n          const object = {\r\n            Countries: tempArray,\r\n            Date: tempSummary.Date,\r\n            Global: tempSummary.Global,\r\n          };\r\n          if (isMounted) {\r\n            setSummary(object);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [tempSummary]);\r\n\r\n  return (\r\n    <>\r\n      <NavBar siteName=\"COVID 19 UPDATES\" className=\"logoText\" />\r\n      <CasesContext.Provider value={value}>\r\n        <AnimatedSwitch\r\n          atEnter={{ opacity: 0 }}\r\n          atLeave={{ opacity: 0 }}\r\n          atActive={{ opacity: 1 }}\r\n          className=\"switch-wrapper\"\r\n        >\r\n          <Route\r\n            path=\"/\"\r\n            render={() => {\r\n              return (\r\n                <>\r\n                  <Tally />\r\n                  <World />\r\n                </>\r\n              );\r\n            }}\r\n            exact\r\n          />\r\n          <Route\r\n            path=\"/about-us\"\r\n            render={() => {\r\n              return (\r\n                <>\r\n                  <About />\r\n                  <Covid />\r\n                  <Technologies />\r\n                </>\r\n              );\r\n            }}\r\n            exact\r\n          />\r\n          <Route\r\n            path=\"/contact\"\r\n            render={() => {\r\n              return <h1>Contact</h1>;\r\n            }}\r\n            exact\r\n          />\r\n        </AnimatedSwitch>\r\n      </CasesContext.Provider>\r\n      <NavBar siteName=\"Copyright 2020\" className=\"\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport \"./app.css\";\r\n\r\n// Components\r\nimport Index from \"./components/Index/Index\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Index />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./app\";\n\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}